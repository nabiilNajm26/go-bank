basePath: /api/v1
definitions:
  domain.Account:
    properties:
      account_number:
        type: string
      account_type:
        $ref: '#/definitions/domain.AccountType'
      balance:
        type: number
      created_at:
        type: string
      currency:
        type: string
      id:
        type: string
      status:
        $ref: '#/definitions/domain.AccountStatus'
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  domain.AccountStatus:
    enum:
    - active
    - inactive
    - frozen
    - closed
    type: string
    x-enum-varnames:
    - AccountStatusActive
    - AccountStatusInactive
    - AccountStatusFrozen
    - AccountStatusClosed
  domain.AccountType:
    enum:
    - savings
    - checking
    - deposit
    type: string
    x-enum-varnames:
    - AccountTypeSavings
    - AccountTypeChecking
    - AccountTypeDeposit
  domain.AuthResponse:
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
      refresh_token:
        type: string
      user:
        $ref: '#/definitions/domain.User'
    type: object
  domain.CreateAccountRequest:
    properties:
      account_type:
        allOf:
        - $ref: '#/definitions/domain.AccountType'
        enum:
        - savings
        - checking
        - deposit
      currency:
        type: string
    required:
    - account_type
    - currency
    type: object
  domain.CreateUserRequest:
    properties:
      email:
        type: string
      full_name:
        maxLength: 255
        minLength: 3
        type: string
      password:
        minLength: 8
        type: string
      phone:
        type: string
    required:
    - email
    - full_name
    - password
    type: object
  domain.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  domain.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      is_verified:
        type: boolean
      phone:
        type: string
      profile_image_url:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Banking API with authentication, transfers, and caching
  title: GoBank API
  version: "1.0"
paths:
  /accounts:
    post:
      consumes:
      - application/json
      description: Create a new bank account for authenticated user
      parameters:
      - description: Account creation request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CreateAccountRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Account'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - BearerAuth: []
      summary: Create new account
      tags:
      - accounts
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return JWT tokens
      parameters:
      - description: User login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user account
      parameters:
      - description: User registration request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/domain.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.AuthResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
